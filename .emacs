
;; 1e4   recursion depth is quite safe since:
;; 1.6e4 still works
;; 2e4   makes emacs crash
(setq max-lisp-eval-depth 10000
      ;; to handle all unwind-protects and similar stuff
      ;; in deep recursion
      max-specpdl-size    42000)

;; speeds up startup time considerably, worth to use
(setq gc-cons-threshold (* 50 1024 1024)
      gc-cons-percentage 0.25)



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Customizations done by emacs customize routine
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector ["#586475" "#dc322f" "#859900" "#b58900" "#268bd2" "#d33682" "#2aa198" "#839496"])
 '(anything-ff-history-max-length 1024)
 '(anything-ff-newfile-prompt-p nil)
 '(anything-kill-ring-threshold 5)
 '(blink-cursor-mode nil)
 '(blink-matching-delay 0.2)
 '(blink-matching-paren nil)
 '(blink-matching-paren-distance 0)
 '(browse-kill-ring-display-duplicates nil)
 '(browse-kill-ring-highlight-current-entry t)
 '(browse-kill-ring-highlight-inserted-item t)
 '(browse-kill-ring-maximum-display-length 100)
 '(browse-kill-ring-no-duplicates nil)
 '(browse-kill-ring-quit-action (quote save-and-restore))
 '(browse-url-browser-function (quote browse-url-firefox))
 '(browse-url-generic-program nil)
 '(byte-optimize-log nil)
 '(c-comment-only-line-offset 2)
 '(c-default-style (quote ((java-mode . "java") (awk-mode . "awk") (other . "linux"))))
 '(c-hanging-semi&comma-criteria (quote set-from-style))
 '(c-syntactic-indentation t)
 '(case-fold-search nil)
 '(color-theme-directory "/home/sergey/emacs/src/color-theme-6.6.0/themes/")
 '(color-theme-libraries (quote ("/home/sergey/emacs/src/color-theme-6.6.0/themes/color-theme-library.el")))
 '(color-theme-load-all-themes nil)
 '(column-number-mode t)
 '(comint-input-ignoredups t)
 '(comint-scroll-show-maximum-output nil)
 '(compilation-ask-about-save nil)
 '(compilation-auto-jump-to-first-error t)
 '(compilation-read-command nil)
 '(compilation-scroll-output (quote first-error))
 '(compilation-skip-threshold 2)
 '(compile-command "make ")
 '(completion-ignored-extensions (quote (".o" "~" ".bin" ".lbin" ".so" ".a" ".ln" ".blg" ".bbl" ".elc" ".lof" ".glo" ".idx" ".lot" ".svn/" ".hg/" ".git/" ".bzr/" "CVS/" "_darcs/" "_MTN/" ".fmt" ".tfm" ".class" ".fas" ".lib" ".mem" ".x86f" ".sparcf" ".dfsl" ".pfsl" ".d64fsl" ".p64fsl" ".lx64fsl" ".lx32fsl" ".dx64fsl" ".dx32fsl" ".fx64fsl" ".fx32fsl" ".sx64fsl" ".sx32fsl" ".wx64fsl" ".wx32fsl" ".fasl" ".ufsl" ".fsl" ".dxl" ".lo" ".la" ".gmo" ".mo" ".toc" ".aux" ".cp" ".fn" ".ky" ".pg" ".tp" ".vr" ".cps" ".fns" ".kys" ".pgs" ".tps" ".vrs" ".pyc" ".pyo" ".hi")))
 '(completion-show-help nil)
 '(current-language-environment "UTF-8")
 '(debug-on-error nil)
 '(diff-switches "-u --ignore-tab-expansion --ignore-space-change --ignore-blank-lines")
 '(doc-view-continuous t)
 '(ediff-custom-diff-options "-u --ignore-tab-expansion --ignore-space-change --ignore-blank-lines")
 '(ediff-diff-options "--ignore-tab-expansion --ignore-space-change --ignore-blank-lines")
 '(ediff-merge-split-window-function (quote split-window-vertically))
 '(ediff-patch-options "")
 '(ediff-split-window-function (quote split-window-vertically))
 '(ediff-window-setup-function (quote ediff-setup-windows-plain))
 '(eldoc-argument-case (quote downcase))
 '(elp-reset-after-results nil)
 '(emms-cache-file "~/emacs/prog-data/emms/cache")
 '(emms-directory "~/emacs/prog-data/emms")
 '(emms-source-file-exclude-regexp "\\`\\(#.*#\\|.*,v\\|.*~\\|\\.\\.?\\|\\.#.*\\|,.*\\)\\'\\|/\\(CVS\\|RCS\\|\\.arch-ids\\|{arch}\\|,.*\\|\\.git\\|\\.svn\\|_darcs\\)\\(/\\|\\'\\)")
 '(emms-source-playlist-default-format (quote native))
 '(enable-local-variables :all)
 '(enable-recursive-minibuffers t)
 '(eshell-aliases-file "/home/sergey/emacs/prog-data/eshell/alias")
 '(eshell-buffer-maximum-lines 65536)
 '(eshell-buffer-shorthand t)
 '(eshell-cmpl-expand-before-complete t)
 '(eshell-cmpl-ignore-case t)
 '(eshell-command-interpreter-max-length 1024)
 '(eshell-directory-name "~/emacs/prog-data/eshell/")
 '(eshell-error-if-no-glob t)
 '(eshell-glob-include-dot-dot nil)
 '(eshell-hist-ignoredups t)
 '(eshell-history-size 65536)
 '(eshell-password-prompt-regexp "[Pp]ass\\(?:word\\|phrase\\).*:\\s *\\'")
 '(eshell-prefer-lisp-functions t)
 '(eshell-scroll-show-maximum-output nil)
 '(eshell-scroll-to-bottom-on-input nil)
 '(eshell-scroll-to-bottom-on-output nil)
 '(eshell-send-direct-to-subprocesses nil)
 '(eshell-tar-regexp "\\.t\\(?:ar\\(?:\\.\\(?:gz\\|bz2\\|Z\\|7z\\)\\)?\\|gz\\|a[zZ]\\|z2\\|7z\\)\\'")
 '(eval-expression-debug-on-error t)
 '(ex-cycle-other-window nil)
 '(ff-case-fold-search t)
 '(fill-column 80)
 '(find-tag-marker-ring-length 512)
 '(flyspell-issue-message-flag nil)
 '(flyspell-issue-welcome-flag nil)
 '(flyspell-tex-command-regexp "\\(\\(begin\\|end\\)[ 	]*{\\|\\(cite[a-z*]*\\|label\\|ref\\|eqref\\|usepackage\\|documentclass\\|\\(?:sub\\(?:sub\\)?\\)?section\\*?\\|item\\|includegraphics\\|caption\\|clearpage\\|hline\\)[ 	]*\\(\\[[^]]*\\]\\)?{[^{}]*\\)")
 '(flyspell-use-meta-tab nil)
 '(font-lock-maximum-decoration t)
 '(font-lock-maximum-size 33554432)
 '(font-lock-verbose nil)
 '(haskell-literate-default (quote tex))
 '(haskell-program-name "ghci ")
 '(hippie-expand-verbose nil)
 '(history-length 1024)
 '(ibuffer-formats (quote ((mark modified read-only " " (name 32 32 :left :elide) " " (mode 16 16 :left :elide) " " filename-and-process) (mark " " (name 32 -1) " " filename-and-process))))
 '(ibuffer-jump-offer-only-visible-buffers t)
 '(ibuffer-show-empty-filter-groups nil)
 '(icicle-default-value (quote insert-end))
 '(icicle-guess-commands-in-path (quote first-use))
 '(icicle-hide-common-match-in-Completions-flag t)
 '(icicle-highlight-lighter-flag nil)
 '(icicle-incremental-completion-flag (quote always))
 '(icicle-inhibit-ding-flag t)
 '(icicle-isearch-complete-keys (quote ([C-M-tab] "\211" "\357")))
 '(icicle-max-candidates 512)
 '(icicle-modal-cycle-down-keys (quote ([nil mouse-5] [mouse-5])))
 '(icicle-modal-cycle-up-keys (quote ([nil mouse-4] [mouse-4])))
 '(icicle-read+insert-file-name-keys nil)
 '(icicle-sort-orders-alist (quote (("alphabetical case insensitive" . icicle-case-insensitive-string-less-p))))
 '(icicle-top-level-key-bindings (quote (("" icicle-describe-option-of-type t) (abort-recursive-edit icicle-abort-recursive-edit t) (bookmark-jump icicle-bookmark t) (bookmark-jump-other-window icicle-bookmark-other-window t) (bookmark-set icicle-bookmark-cmd t) (minibuffer-keyboard-quit icicle-abort-recursive-edit (fboundp (quote minibuffer-keyboard-quit))) (delete-window icicle-delete-window t) (delete-windows-for icicle-delete-window t) (dired icicle-dired t) (dired-other-window icicle-dired-other-window t) (exchange-point-and-mark icicle-exchange-point-and-mark t) (execute-extended-command icicle-execute-extended-command t) (find-file icicle-file t) (find-file-other-window icicle-file-other-window t) (find-file-read-only icicle-find-file-read-only t) (find-file-read-only-other-window icicle-find-file-read-only-other-window t) (insert-buffer icicle-insert-buffer t) (kill-buffer icicle-kill-buffer t) (kill-buffer-and-its-windows icicle-kill-buffer t) (other-window icicle-other-window-or-frame t) (other-window-or-frame icicle-other-window-or-frame t) (pop-global-mark icicle-goto-global-marker-or-pop-global-mark t) (set-mark-command icicle-goto-marker-or-set-mark-command t) (switch-to-buffer icicle-buffer t) (switch-to-buffer-other-window icicle-buffer-other-window t) (where-is icicle-where-is t) (yank icicle-yank-maybe-completing t) ("jtaa" icicle-find-file-tagged (featurep (quote bookmark+))) ("4jtaa" icicle-find-file-tagged-other-window (featurep (quote bookmark+))) (bmkp-autofile-set icicle-bookmark-a-file (fboundp (quote bmkp-bookmark-a-file))) (bmkp-tag-a-file icicle-tag-a-file (fboundp (quote bmkp-tag-a-file))) (bmkp-untag-a-file icicle-untag-a-file (fboundp (quote bmkp-untag-a-file))) (bmkp-find-file-all-tags icicle-find-file-all-tags (fboundp (quote bmkp-find-file-all-tags))) (bmkp-find-file-all-tags-other-window icicle-find-file-all-tags-other-window (fboundp (quote bmkp-find-file-all-tags))) (bmkp-find-file-all-tags-regexp icicle-find-file-all-tags-regexp (fboundp (quote bmkp-find-file-all-tags-regexp))) (bmkp-find-file-all-tags-regexp-other-window icicle-find-file-all-tags-regexp-other-window (fboundp (quote bmkp-find-file-all-tags-regexp-other-window))) (bmkp-find-file-some-tags icicle-find-file-some-tags (fboundp (quote bmkp-find-file-some-tags))) (bmkp-find-file-some-tags-other-window icicle-find-file-some-tags-other-window (fboundp (quote bmkp-find-file-some-tags-other-window))) (bmkp-find-file-some-tags-regexp icicle-find-file-some-tags-regexp (fboundp (quote bmkp-find-file-some-tags-regexp))) (bmkp-find-file-some-tags-regexp-other-window icicle-find-file-some-tags-regexp-other-window (fboundp (quote bmkp-find-file-some-tags-regexp-other-window))) (bmkp-autofile-jump icicle-bookmark-autofile (fboundp (quote bmkp-autofile-jump))) (bmkp-autofile-jump-other-window icicle-bookmark-autofile-other-window (fboundp (quote bmkp-autofile-jump))) (bmkp-autonamed-jump icicle-bookmark-autonamed (fboundp (quote bmkp-autonamed-jump))) (bmkp-autonamed-jump-other-window icicle-bookmark-autonamed-other-window (fboundp (quote bmkp-autonamed-jump))) (bmkp-autonamed-this-buffer-jump icicle-bookmark-autonamed-this-buffer (fboundp (quote bmkp-autonamed-jump-this-buffer))) (bmkp-autonamed-jump-this-buffer-other-window icicle-bookmark-autonamed-this-buffer-other-window (fboundp (quote bmkp-autonamed-jump))) (bmkp-bookmark-file-jump icicle-bookmark-bookmark-file (fboundp (quote bmkp-bookmark-file-jump))) (bmkp-bookmark-list-jump icicle-bookmark-bookmark-list (fboundp (quote bmkp-bookmark-list-jump))) (bmkp-desktop-jump icicle-bookmark-desktop (fboundp (quote bmkp-desktop-jump))) (bmkp-dired-jump icicle-bookmark-dired (fboundp (quote bmkp-dired-jump))) (bmkp-dired-jump-other-window icicle-bookmark-dired-other-window (fboundp (quote bmkp-dired-jump))) (bmkp-file-jump icicle-bookmark-file (fboundp (quote bmkp-file-jump))) (bmkp-file-jump-other-window icicle-bookmark-file-other-window (fboundp (quote bmkp-file-jump))) (bmkp-file-this-dir-jump icicle-bookmark-file-this-dir (fboundp (quote bmkp-file-this-dir-jump))) (bmkp-file-this-dir-jump-other-window icicle-bookmark-file-this-dir-other-window (fboundp (quote bmkp-file-this-dir-jump))) (bmkp-gnus-jump icicle-bookmark-gnus (fboundp (quote bmkp-gnus-jump))) (bmkp-gnus-jump-other-window icicle-bookmark-gnus-other-window (fboundp (quote bmkp-gnus-jump))) (bmkp-image-jump icicle-bookmark-image (fboundp (quote bmkp-image-jump))) (bmkp-image-jump-other-window icicle-bookmark-image-other-window (fboundp (quote bmkp-image-jump))) (bmkp-info-jump icicle-bookmark-info (fboundp (quote bmkp-info-jump))) (bmkp-info-jump-other-window icicle-bookmark-info-other-window (fboundp (quote bmkp-info-jump))) (bmkp-local-file-jump icicle-bookmark-local-file (fboundp (quote bmkp-local-file-jump))) (bmkp-local-file-jump-other-window icicle-bookmark-local-file-other-window (fboundp (quote bmkp-local-file-jump))) (bmkp-man-jump icicle-bookmark-man (fboundp (quote bmkp-man-jump))) (bmkp-man-jump-other-window icicle-bookmark-man-other-window (fboundp (quote bmkp-man-jump))) (bmkp-non-file-jump icicle-bookmark-non-file (fboundp (quote bmkp-non-file-jump))) (bmkp-non-file-jump-other-window icicle-bookmark-non-file-other-window (fboundp (quote bmkp-non-file-jump))) (bmkp-region-jump icicle-bookmark-region (fboundp (quote bmkp-region-jump))) (bmkp-region-jump-other-window icicle-bookmark-region-other-window (fboundp (quote bmkp-region-jump))) (bmkp-remote-file-jump icicle-bookmark-remote-file (fboundp (quote bmkp-remote-file-jump))) (bmkp-remote-file-jump-other-window icicle-bookmark-remote-file-other-window (fboundp (quote bmkp-remote-file-jump))) (bmkp-specific-buffers-jump icicle-bookmark-specific-buffers (fboundp (quote bmkp-specific-buffers-jump))) (bmkp-specific-buffers-jump-other-window icicle-bookmark-specific-buffers-other-window (fboundp (quote bmkp-specific-buffers-jump))) (bmkp-specific-files-jump icicle-bookmark-specific-files (fboundp (quote bmkp-specific-files-jump))) (bmkp-specific-files-jump-other-window icicle-bookmark-specific-files-other-window (fboundp (quote bmkp-specific-files-jump))) (bmkp-temporary-jump icicle-bookmark-temporary (fboundp (quote bmkp-temporary-jump))) (bmkp-temporary-jump-other-window icicle-bookmark-temporary-other-window (fboundp (quote bmkp-temporary-jump))) (bmkp-this-buffer-jump icicle-bookmark-this-buffer (fboundp (quote bmkp-this-buffer-jump))) (bmkp-this-buffer-jump-other-window icicle-bookmark-this-buffer-other-window (fboundp (quote bmkp-this-buffer-jump))) (bmkp-url-jump icicle-bookmark-url (fboundp (quote bmkp-url-jump))) (bmkp-url-jump-other-window icicle-bookmark-url-other-window (fboundp (quote bmkp-url-jump))) (bmkp-w3m-jump icicle-bookmark-w3m (fboundp (quote bmkp-w3m-jump))) (bmkp-w3m-jump-other-window icicle-bookmark-w3m-other-window (fboundp (quote bmkp-w3m-jump))) (bmkp-all-tags-jump icicle-bookmark-all-tags (fboundp (quote bmkp-all-tags-jump))) (bmkp-all-tags-jump-other-window icicle-bookmark-all-tags-other-window (fboundp (quote bmkp-all-tags-jump))) (bmkp-all-tags-regexp-jump icicle-bookmark-all-tags-regexp (fboundp (quote bmkp-all-tags-regexp-jump))) (bmkp-all-tags-regexp-jump-other-window icicle-bookmark-all-tags-regexp-other-window (fboundp (quote bmkp-all-tags-regexp-jump))) (bmkp-some-tags-jump icicle-bookmark-some-tags (fboundp (quote bmkp-some-tags-jump))) (bmkp-some-tags-jump-other-window icicle-bookmark-some-tags-other-window (fboundp (quote bmkp-some-tags-jump))) (bmkp-some-tags-regexp-jump icicle-bookmark-some-tags-regexp (fboundp (quote bmkp-some-tags-regexp-jump))) (bmkp-some-tags-regexp-jump-other-window icicle-bookmark-some-tags-regexp-other-window (fboundp (quote bmkp-some-tags-regexp-jump))) (bmkp-file-all-tags-jump icicle-bookmark-file-all-tags (fboundp (quote bmkp-file-all-tags-jump))) (bmkp-file-all-tags-jump-other-window icicle-bookmark-file-all-tags-other-window (fboundp (quote bmkp-file-all-tags-jump))) (bmkp-file-all-tags-regexp-jump icicle-bookmark-file-all-tags-regexp (fboundp (quote bmkp-file-all-tags-regexp-jump))) (bmkp-file-all-tags-regexp-jump-other-window icicle-bookmark-file-all-tags-regexp-other-window (fboundp (quote bmkp-file-all-tags-regexp-jump))) (bmkp-file-some-tags-jump icicle-bookmark-file-some-tags (fboundp (quote bmkp-file-some-tags-jump))) (bmkp-file-some-tags-jump-other-window icicle-bookmark-file-some-tags-other-window (fboundp (quote bmkp-file-some-tags-jump))) (bmkp-file-some-tags-regexp-jump icicle-bookmark-file-some-tags-regexp (fboundp (quote bmkp-file-some-tags-regexp-jump))) (bmkp-file-some-tags-regexp-jump-other-window icicle-bookmark-file-some-tags-regexp-other-window (fboundp (quote bmkp-file-some-tags-regexp-jump))) (bmkp-file-this-dir-all-tags-jump icicle-bookmark-file-this-dir-all-tags (fboundp (quote bmkp-file-this-dir-all-tags-jump))) (bmkp-file-this-dir-all-tags-jump-other-window icicle-bookmark-file-this-dir-all-tags-other-window (fboundp (quote bmkp-file-this-dir-all-tags-jump))) (bmkp-file-this-dir-all-tags-regexp-jump icicle-bookmark-file-this-dir-all-tags-regexp (fboundp (quote bmkp-file-this-dir-all-tags-regexp-jump))) (bmkp-file-this-dir-all-tags-regexp-jump-other-window icicle-bookmark-file-this-dir-all-tags-regexp-other-window (fboundp (quote bmkp-file-this-dir-all-tags-regexp-jump))) (bmkp-file-this-dir-some-tags-jump icicle-bookmark-file-this-dir-some-tags (fboundp (quote bmkp-file-this-dir-some-tags-jump))) (bmkp-file-this-dir-some-tags-jump-other-window icicle-bookmark-file-this-dir-some-tags-other-window (fboundp (quote bmkp-file-this-dir-some-tags-jump))) (bmkp-file-this-dir-some-tags-regexp-jump icicle-bookmark-file-this-dir-some-tags-regexp (fboundp (quote bmkp-file-this-dir-some-tags-regexp-jump))) (bmkp-file-this-dir-some-tags-regexp-jump-other-window icicle-bookmark-file-this-dir-some-tags-regexp-other-window (fboundp (quote bmkp-file-this-dir-some-tags-regexp-jump))) (find-tag icicle-find-tag (fboundp (quote command-remapping))) (find-tag-other-window icicle-find-first-tag-other-window t) (pop-tag-mark icicle-pop-tag-mark (fboundp (quote command-remapping))) (eval-expression icicle-pp-eval-expression (fboundp (quote command-remapping))) (pp-eval-expression icicle-pp-eval-expression (fboundp (quote command-remapping))))))
 '(icicle-top-level-when-sole-completion-delay 0.01)
 '(icicle-top-level-when-sole-completion-flag nil)
 '(icicle-word-completion-keys nil)
 '(ielm-noisy nil)
 '(ielm-prompt "> ")
 '(imaxima-fnt-size "huge")
 '(imaxima-label-color "#dc322f")
 '(imaxima-latex-preamble "")
 '(imaxima-maxima-options "-q --disable-readline --preload-lisp='/home/sergey/emacs/third-party/maxima/imaxima.lisp'")
 '(imaxima-pt-size 12)
 '(imaxima-scale-factor 1.0)
 '(imaxima-tmp-dir "~/emacs/prog-data/imaxima-tmp/")
 '(inferior-lisp-program "sbcl")
 '(inferior-octave-buffer "*Octave*")
 '(inferior-octave-startup-args (quote ("--no-line-editing")))
 '(inferior-octave-startup-file "/home/sergey/.octaverc")
 '(jit-lock-chunk-size 1000)
 '(jit-lock-stealth-time nil)
 '(lisp-indent-function (quote common-lisp-indent-function))
 '(lisp-indent-maximum-backtracking 20)
 '(lisp-indent-offset nil)
 '(lisp-interaction-mode-hook nil)
 '(lisp-lambda-list-keyword-alignment nil)
 '(lisp-lambda-list-keyword-parameter-indentation 0)
 '(lisp-loop-keyword-indentation 4)
 '(lisp-simple-loop-indentation 3)
 '(lisp-tag-body-indentation 2)
 '(maxima-args (quote ("-q" "--disable-readline" "--preload-lisp=/home/sergey/emacs/third-party/maxima/maxima-tex.lisp")))
 '(maxima-input-history-file "~/emacs/prog-data/.maxima_history")
 '(maxima-input-history-length 65536)
 '(maxima-save-input-history t)
 '(maxima-use-full-color-in-process-buffer t)
 '(nxml-slash-auto-complete-flag t)
 '(octave-block-offset 4)
 '(octave-continuation-offset 8)
 '(open-paren-in-column-0-is-defun-start nil)
 '(package-archive-upload-base "/home/sergey/emacs/prog-data/packages")
 '(package-archives (quote (("melpa" . "http://melpa.milkbox.net/packages/"))))
 '(package-directory-list nil)
 '(package-enable-at-startup nil)
 '(package-user-dir "~/emacs/prog-data/elisp-packages")
 '(pcomplete-expand-before-complete t)
 '(pcomplete-ignore-case t)
 '(preview-auto-cache-preamble t)
 '(preview-transparent-color (quote (default :background)))
 '(prolog-underscore-wordchar-flag t)
 '(py-load-pymacs-p nil)
 '(py-start-run-py-shell nil)
 '(py-temp-directory "/home/sergey/emacs/prog-data/python-tmp")
 '(quack-dir "~/emacs/prog-data/quack")
 '(quack-fontify-style (quote emacs))
 '(quack-global-menu-p nil)
 '(quack-programs (quote nil))
 '(quack-quiet-warnings-p t)
 '(quack-remap-find-file-bindings-p nil)
 '(quack-remember-new-programs-p nil)
 '(quack-tabs-are-evil-p t)
 '(reb-re-syntax (quote read))
 '(regexp-search-ring-max 1024)
 '(rng-schema-locating-files (quote ("schemas.xml" "/home/sergey/emacs/standalone/nxhtml/xhtml-transitional-in-nxml/schemas.xml" "/usr/local/share/emacs/24.0.95/etc/schema/schemas.xml")))
 '(save-completions-file-name "~/emacs/prog-data/completions")
 '(scheme-mit-dialect nil)
 '(search-ring-max 1024)
 '(slime-auto-connect (quote ask))
 '(slime-complete-symbol-function (quote slime-fuzzy-complete-symbol))
 '(slime-ed-use-dedicated-frame nil)
 '(slime-enable-evaluate-in-emacs t)
 '(slime-header-line-p nil)
 '(slime-kill-without-query-p t)
 '(slime-load-failed-fasl (quote never))
 '(slime-repl-history-file "/home/sergey/emacs/prog-data/slime-repl-history")
 '(slime-repl-history-remove-duplicates t)
 '(slime-repl-history-trim-whitespaces t)
 '(slime-repl-track-package-in-prompt t)
 '(slime-repl-wrap-history t)
 '(smex-history-length 100)
 '(speedbar-use-images nil)
 '(sql-input-ring-separator "
--
")
 '(sql-pop-to-buffer-after-send-region t)
 '(sr-history-length 100)
 '(sr-listing-switches "--time-style=locale --group-directories-first -alDhgG")
 '(sr-refresh-hook (quote (auto-insert)))
 '(sr-show-hidden-files t)
 '(sr-start-hook (quote (auto-insert)))
 '(sr-use-commander-keys nil)
 '(sr-window-split-style (quote horizontal))
 '(sr-windows-locked nil)
 '(tabbar-cycling-scope (quote tabs))
 '(tabbar-home-function nil)
 '(tabbar-home-help-function nil)
 '(tabbar-inhibit-functions (quote (tabbar-default-inhibit-function)))
 '(tabbar-scroll-left-function nil)
 '(tabbar-scroll-left-help-function nil)
 '(tabbar-scroll-right-function nil)
 '(tabbar-scroll-right-help-function nil)
 '(tags-case-fold-search nil)
 '(tags-loop-revert-buffers t)
 '(tags-revert-without-query t)
 '(temporary-file-directory "/home/sergey/emacs/prog-data/tmp")
 '(tramp-auto-save-directory "/home/sergey/emacs/prog-data/tramp")
 '(undo-limit 1000000)
 '(undo-outer-limit 32000000)
 '(undo-strong-limit 1000000)
 '(uniquify-buffer-name-style (quote post-forward) nil (uniquify))
 '(uniquify-strip-common-suffix nil)
 '(user-full-name "Sergey Vinokurov")
 '(user-mail-address "serg.foo@gmail.com")
 '(vim-mode t)
 '(vim:max-jumplist 100)
 '(vim:shift-width 4)
 '(warning-suppress-types (quote ((\(undo\ discard-info\)))))
 '(which-func-format (quote which-func-current))
 '(which-func-maxout 1000000)
 '(yas/prompt-functions (quote (yas/completing-prompt))))

(add-to-list 'load-path "/home/sergey/emacs")

(load-library "dotemacs")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Custom function declarations
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;Customizations done by emacs customize routine
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;;; Emacs/W3 Configuration
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )





