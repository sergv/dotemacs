language: generic

# Explicitly request container-based infrastructure.
sudo: false

cache:
  directories:
    - "$HOME/.cabal/packages"
    - "$HOME/.cabal/store"
    - "$HOME/.cabal/bin"

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  # remove files that are regenerated by 'cabal update'
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/01-index*
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/*.json
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/hackage-security-lock
  - rm -rfv $HOME/.cabal/packages/head.hackage

# Speed up git.
git:
  depth: 5

matrix:
  allow_failures:
    - compiler: "GHC HEAD, Cabal HEAD"

  fast_finish: true

  include:
    - env: GHC=8.0.2 CABALVER=2.0 GHCHEAD=0
      compiler: "GHC 8.0.2, Cabal 2.0"
      addons: {apt: {packages: [ghc-8.0.2, cabal-install-2.0], sources: [hvr-ghc]}}

    - env: GHC=8.2.2 CABALVER=2.2 GHCHEAD=0
      compiler: "GHC 8.2.2, Cabal 2.0"
      addons: {apt: {packages: [ghc-8.2.2, cabal-install-2.0], sources: [hvr-ghc]}}

    - env: GHC=8.4.3 CABALVER=2.2 GHCHEAD=0
      compiler: "GHC 8.4.3, Cabal 2.2"
      addons: {apt: {packages: [ghc-8.4.3, cabal-install-2.2], sources: [hvr-ghc]}}

    - env: GHC=head CABALVER=head GHCHEAD=1
      compiler: "GHC HEAD, Cabal HEAD"
      addons: {apt: {packages: [ghc-head, cabal-install-head], sources: [hvr-ghc]}}

install: true

before_install:

  - unset CC

  - export PATH="/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.cabal/bin:$PATH"
  - echo "$PATH"

  - |
    if [ "$GHCHEAD" = 1 ]; then
      ALLOW_NEWER_FLAG="--allow-newer=base"
    else
      ALLOW_NEWER_FLAG=""
    fi

install:
  - echo "$PATH"
  - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
  - echo "$(ghc-pkg list)"

  - ghc-pkg list
  - cabal --version

  - rm -f $HOME/.cabal/config
  - travis_retry cabal update -v
  # Overlay Hackage Package Index for GHC HEAD: https://github.com/hvr/head.hackage
  - |
    if $GHCHEAD; then
      'repository head.hackage                                                       ' >>$HOME/.cabal/config
      '   url: http://head.hackage.haskell.org/                                      ' >>$HOME/.cabal/config
      '   secure: True                                                               ' >>$HOME/.cabal/config
      '   root-keys: 07c59cb65787dedfaef5bd5f987ceb5f7e5ebf88b904bbd4c5cbdeb2ff71b740' >>$HOME/.cabal/config
      '              2e8555dde16ebd8df076f1a8ef13b8f14c66bad8eafefd7d9e37d0ed711821fb' >>$HOME/.cabal/config
      '              8f79fd2389ab2967354407ec852cbe73f2e8635793ac446d09461ffb99527f6e' >>$HOME/.cabal/config
      '   key-threshold: 3                                                           ' >>$HOME/.cabal/config
      EOF
      travis_retry cabal new-update head.hackage -v
    fi

  - echo "Installing dependencies"
  - cabal new-build --only-dependencies -j2 $ALLOW_NEWER_FLAG

  - DISTDIR=$(mktemp -d /tmp/dist-radix-tree.XXXX)
  - TESTDIR=$(mktemp -d /tmp/dist-test.XXXX)

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
  # test that source-distributions can be generated
  - cabal sdist
  - cat ./dist/radix-tree-*.tar.gz | (cd "${DISTDIR}/" && tar -xzvf -)
  - cd ${DISTDIR}/radix-tree-*
  - |
    printf 'packages: \".\"\n' > cabal.project
  - PKGDIR="$(pwd)"

  # Build the package
  - echo "Building package"
  - cabal new-configure $ALLOW_NEWER_FLAG
  - cabal new-build
  - cabal check
  - cabal new-test
  - cabal new-haddock all
