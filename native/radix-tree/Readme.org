#+STARTUP: content

* A memory-efficient map from strings to arbitrary values

  [[https://img.shields.io/badge/license-BSD_3-green.svg?dummy]]
  [[https://travis-ci.org/sergv/radix-tree][https://travis-ci.org/sergv/radix-tree.svg?branch=master]]

  This library provides a Haskell implementation of the radix tree
  datastructure.

  The coolness of the radix tree is that in stores all its string keys
  in a way thas shares their common prefixes. Thus memory savings can be
  achieved if a lot of keys have the same prefix.

** Supported GHC versions

Tested with GHC ~8.0.2~, ~8.2.2~, ~8.4.3~.

** Benchmark
   Running on my laptop equipped with i7-4710MQ 2.5-3.3GHz CPU I get:

#+BEGIN_EXAMPLE
creation/Data.RadixTree                  mean 126.7 ms  ( +- 4.304 ms  )
creation/Data.Map                        mean 124.4 ms  ( +- 7.775 ms  )
creation/Data.HashMap                    mean 99.44 ms  ( +- 7.105 ms  )
creation/BasicHashTable                  mean 134.4 ms  ( +- 5.674 ms  )
creation/CuckooHashTable                 mean 164.7 ms  ( +- 3.406 ms  )
lookup/present/Data.RadixTree            mean 75.74 ms  ( +- 1.736 ms  )
lookup/present/Data.Map                  mean 126.8 ms  ( +- 13.02 ms  )
lookup/present/Data.HashMap              mean 91.19 ms  ( +- 13.76 ms  )
lookup/present/BasicHashTable            mean 64.87 ms  ( +- 6.963 ms  )
lookup/present/CuckooHashTable           mean 82.25 ms  ( +- 5.611 ms  )
lookup/missing/Data.RadixTree            mean 22.77 ms  ( +- 555.3 μs  )
lookup/missing/Data.Map                  mean 70.43 ms  ( +- 5.421 ms  )
lookup/missing/Data.HashMap              mean 19.86 ms  ( +- 723.1 μs  )
lookup/missing/BasicHashTable            mean 18.74 ms  ( +- 894.5 μs  )
lookup/missing/CuckooHashTable           mean 31.83 ms  ( +- 988.0 μs  )
lookup/both/Data.RadixTree               mean 73.61 ms  ( +- 1.257 ms  )
lookup/both/Data.Map                     mean 119.0 ms  ( +- 1.740 ms  )
lookup/both/Data.HashMap                 mean 84.58 ms  ( +- 2.984 ms  )
lookup/both/BasicHashTable               mean 66.36 ms  ( +- 13.60 ms  )
lookup/both/CuckooHashTable              mean 70.86 ms  ( +- 4.455 ms  )
keys/Data.RadixTree                      mean 68.87 ms  ( +- 4.263 ms  )
keys/Data.Map                            mean 3.494 ms  ( +- 554.7 μs  )
keys/Data.HashMap                        mean 2.761 ms  ( +- 61.97 μs  )
toList/Data.RadixTree                    mean 82.30 ms  ( +- 863.0 μs  )
toList/Data.Map                          mean 6.461 ms  ( +- 1.489 ms  )
toList/Data.HashMap                      mean 3.363 ms  ( +- 118.2 μs  )
union/Data.RadixTree                     mean 17.32 ms  ( +- 368.5 μs  )
union/Data.Map                           mean 11.59 ms  ( +- 277.2 μs  )
union/Data.HashMap                       mean 20.78 ms  ( +- 1.427 ms  )
#+END_EXAMPLE

