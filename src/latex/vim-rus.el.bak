;;; vim-rus.el ---

;; Copyright (C) Sergey Vinokurov
;;
;; Author: Sergey Vinokurov <serg.foo@gmail.com>
;; Created: Sunday,  4 September 2011
;; Keywords:
;; Requirements:
;; Status:

;; bind russian keys for vim

(require 'vim-init)


(defconst +eng-to-rus-keys+
  '(("a" "ф") ("A" "Ф")
    ("b" "т") ("B" "Т")
    ("c" "ш") ("C" "Ш")
    ("d" "р") ("D" "Р")
    ("e" "в") ("E" "В")
    ("f" "н") ("F" "Н")
    ("g" "г") ("G" "Г")
    ("h" "о") ("H" "О")
    ("i" "п") ("I" "П")
    ("j" "с") ("J" "С")
    ("k" "м") ("K" "М")
    ("l" "з") ("L" "З")
    ("m" "ь") ("M" "Ь")
    ("n" "д") ("N" "Д")
    ("o" "ы") ("O" "Ы")
    ("p" "к") ("P" "К")
    ("q" "ч") ("Q" "Ч")
    ("r" "щ") ("R" "Щ")
    ("s" "ж") ("S" "Ж")
    ("t" "л") ("T" "Л")
    ("u" "а") ("U" "А")
    ("v" "ю") ("V" "Ю")
    ("w" "б") ("W" "Б")
    ("x" "и") ("X" "И")
    ("y" "е") ("Y" "Е")

    ("," "ц") ("<" "Ц")
    ("." "у") (">" "У")

    ("'" "й") ("\"" "Й")
    (";" "я") (":" "Я")
    ("-" "э") ("_" "Э")
    ("/" "х") ("?" "Х")
    ("=" "ъ") ("+" "Ъ")
    ("`" "ё") ("~" "Ё")))


(defun vim:map-russian-keys (normal-map
                             visual-map
                             insert-map
                             motion-map
                             operator-pending-map)
  (labels ((map-eng-to-rus-keys (source-map &optional target-map)
             (setq target-map (or target-map source-map))
             (map-keymap #'(lambda (key def)
                             (when (and (characterp key)
                                        (assoc* (char-to-string key)
                                                +eng-to-rus-keys+
                                                :test #'string=))
                               (define-key
                                   target-map
                                   (eval `(kbd ,(cadr
                                                 (assoc* (char-to-string key)
                                                         +eng-to-rus-keys+
                                                         :test #'string=))))
                                 def)))
                         source-map)))

    (when normal-map
      (map-eng-to-rus-keys vim:normal-mode-keymap normal-map)

      (def-keys-for-map1 normal-map
          '(("C-о" vim:cmd-nohighlight)
            ("C-ю" vim:visual-toggle-block)
            ("C-а" undo-tree-visualize)
            ("C-ы" vim:scroll-line-up)
            ("C-в" vim:scroll-line-down)
            ;; (";"   vim:motion-end-of-line)

            ;; ("SPC о"   help-command)
            ("г о ю" describe-variable)
            ("г о н" describe-function)
            ("г о ь" describe-mode)
            ("г о ш" describe-key-briefly)
            ("г о Ш" describe-coding-system)
            ("г о м" describe-key)
            ("г о ж" describe-syntax)
            ("г о р" apropos-documentation)
            ("г о т" describe-bindings)
            ("г о ф" apropos-command)

            ("г а"   Control-X-prefix)
            ("г м"   remove-buffer)
            ("г М"   remove-buffer-and-window)
            ("г н"   find-file)
            ("ц б"   save-buffer)
            ("ц т"   ibuffer)

            ("ц ж"   nil)
            ("ц ж б" vim:replace-word)
            ("ц ж Б" vim:replace-WORD)

            ("'"       nil)
            ("' н"     icicle-locate-file)
            ("й ж б"   vim:convenient-replace-word)
            ("й s Б"   vim:convenient-replace-WORD)

            ("г Ц"    vim:motion-go-to-first-non-blank-beg)
            ("г У"    vim:motion-go-to-first-non-blank-end)
            ("г TAB"  nil)
            ("г с"    nil)
            ("г С"    vim:cmd-join-lines)
            ("г ч"    nil)
            ("г д"    nil)
            ("г л"    nil)
            ("г и"    execute-extended-command)
            ("г м"    nil)

            ("г ш ш"  comment-util-comment-lines)
            ("г ш а"  comment-util-uncomment-region)
            ("C-б"    backward-delete-word)

            ("C-ы"    vim:scroll-line-up)
            ("C-в"    vim:scroll-line-down))))

    (when visual-map
      (map-eng-to-rus-keys vim:visual-mode-keymap visual-map)
      (def-keys-for-map1 visual-map
          '(("C-о"   vim:cmd-nohighlight)
            ("C-а"   undo-tree-visualize)
            ("C-ы" vim:scroll-line-up)
            ("C-в" vim:scroll-line-down)
            ;; (";"     vim:motion-end-of-line)

            ("SPC а" Control-X-prefix)
            ("SPC о" help-command)

            ("SPC ш ш"       comment-util-comment-region)
            ("SPC ш а"       comment-util-uncomment-region-simple)
            ("SPC з в"       eval-region)

            ("SPC ж"   vim:replace-selected)
            ("й"       nil)
            ("й ж"     vim:convenient-replace-selected)

            ("г TAB"   indent-region)
            ("г С"     vim:cmd-join-lines)
            ("г и"     execute-extended-command))))

    (when insert-map
      (def-keys-for-map1 insert-map
          '(("C-б"           backward-kill-word)
            ("C-щ"           yank)
            ("C--"           yank-previous)
            ("C-+"           yank-next)
            )))

    (when motion-map
      (map-eng-to-rus-keys vim:motion-mode-keymap motion-map))

    (when operator-pending-map
      (map-eng-to-rus-keys vim:operator-pending-mode-keymap
                           operator-pending-map))))

(provide 'vim-rus)

;;; vim-rus.el ends here
